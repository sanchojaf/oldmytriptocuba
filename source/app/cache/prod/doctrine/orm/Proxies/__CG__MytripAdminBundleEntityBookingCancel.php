<?php

namespace Proxies\__CG__\Mytrip\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BookingCancel extends \Mytrip\AdminBundle\Entity\BookingCancel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'bookingCancelId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelReason', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundAmount', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundReferenceno', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'status', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'createdDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'booking', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelPercentage', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundCurrency');
        }

        return array('__isInitialized__', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'bookingCancelId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelReason', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundAmount', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundReferenceno', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'status', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'createdDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'booking', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'cancelPercentage', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingCancel' . "\0" . 'refundCurrency');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BookingCancel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getBookingCancelId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getBookingCancelId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookingCancelId', array());

        return parent::getBookingCancelId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancelDate($cancelDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancelDate', array($cancelDate));

        return parent::setCancelDate($cancelDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancelDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancelDate', array());

        return parent::getCancelDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancelReason($cancelReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancelReason', array($cancelReason));

        return parent::setCancelReason($cancelReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancelReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancelReason', array());

        return parent::getCancelReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundAmount($refundAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundAmount', array($refundAmount));

        return parent::setRefundAmount($refundAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundAmount', array());

        return parent::getRefundAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundReferenceno($refundReferenceno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundReferenceno', array($refundReferenceno));

        return parent::setRefundReferenceno($refundReferenceno);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundReferenceno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundReferenceno', array());

        return parent::getRefundReferenceno();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundDate($refundDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundDate', array($refundDate));

        return parent::setRefundDate($refundDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundDate', array());

        return parent::getRefundDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedDate($createdDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedDate', array($createdDate));

        return parent::setCreatedDate($createdDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDate', array());

        return parent::getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBooking(\Mytrip\AdminBundle\Entity\Booking $booking = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBooking', array($booking));

        return parent::setBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooking', array());

        return parent::getBooking();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancelPercentage($cancelPercentage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancelPercentage', array($cancelPercentage));

        return parent::setCancelPercentage($cancelPercentage);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancelPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancelPercentage', array());

        return parent::getCancelPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundCurrency($refundCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundCurrency', array($refundCurrency));

        return parent::setRefundCurrency($refundCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundCurrency', array());

        return parent::getRefundCurrency();
    }

}
