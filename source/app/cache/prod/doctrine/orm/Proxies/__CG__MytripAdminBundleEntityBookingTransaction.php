<?php

namespace Proxies\__CG__\Mytrip\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BookingTransaction extends \Mytrip\AdminBundle\Entity\BookingTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'bookingTransactionId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'paymentType', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionAmount', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'booking', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionCurrency');
        }

        return array('__isInitialized__', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'bookingTransactionId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'paymentType', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionId', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionDate', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionAmount', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'booking', '' . "\0" . 'Mytrip\\AdminBundle\\Entity\\BookingTransaction' . "\0" . 'transactionCurrency');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BookingTransaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getBookingTransactionId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getBookingTransactionId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookingTransactionId', array());

        return parent::getBookingTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentType($paymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentType', array($paymentType));

        return parent::setPaymentType($paymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentType', array());

        return parent::getPaymentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($transactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', array($transactionId));

        return parent::setTransactionId($transactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', array());

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionDate($transactionDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionDate', array($transactionDate));

        return parent::setTransactionDate($transactionDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionDate', array());

        return parent::getTransactionDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionAmount($transactionAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionAmount', array($transactionAmount));

        return parent::setTransactionAmount($transactionAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionAmount', array());

        return parent::getTransactionAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBooking(\Mytrip\AdminBundle\Entity\Booking $booking = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBooking', array($booking));

        return parent::setBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooking', array());

        return parent::getBooking();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionCurrency($transactionCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionCurrency', array($transactionCurrency));

        return parent::setTransactionCurrency($transactionCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionCurrency', array());

        return parent::getTransactionCurrency();
    }

}
